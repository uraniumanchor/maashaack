<?xml version="1.0" encoding="UTF-8"?>

<!--
  Version: MPL 1.1/GPL 2.0/LGPL 2.1
 
  The contents of this file are subject to the Mozilla Public License Version
  1.1 (the "License"); you may not use this file except in compliance with
  the License. You may obtain a copy of the License at
  http://www.mozilla.org/MPL/
  
  Software distributed under the License is distributed on an "AS IS" basis,
  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
  for the specific language governing rights and limitations under the
  License.
  
  The Original Code is [maashaack framework].
  
  The Initial Developers of the Original Code are
  Zwetan Kjukov <zwetan@gmail.com> and Marc Alcaraz <ekameleon@gmail.com>.
  Portions created by the Initial Developers are Copyright (C) 2006-2008
  the Initial Developers. All Rights Reserved.
  
  Contributor(s):
  
  Alternatively, the contents of this file may be used under the terms of
  either the GNU General Public License Version 2 or later (the "GPL"), or
  the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
  in which case the provisions of the GPL or the LGPL are applicable instead
  of those above. If you wish to allow use of your version of this file only
  under the terms of either the GPL or the LGPL, and not to allow others to
  use your version of this file under the terms of the MPL, indicate your
  decision by deleting the provisions above and replace them with the notice
  and other provisions required by the LGPL or the GPL. If you do not delete
  the provisions above, a recipient may use your version of this file under
  the terms of any one of the MPL, the GPL or the LGPL.
-->

<project name="maashaack_redshell" default="main" basedir=".">
    
    
    <property file="build/user.properties"/>
    <property file="build/contributor.properties"/>
    <property file="build/build.properties"/>
    
    <target name="main">
        
        <fileset id="sources" dir="${x4a.src}">
            <include name="**/*.as"/>
            <!-- <exclude name="**/_VirtualMachine.as" /> -->
            <!-- <exclude name="**/VirtualMachine.as" /> -->
            
            <exclude name="**/_VirtualMachine.as" />
            <exclude name="**/VirtualMachine.as" />
            <exclude name="**/evaluators/*.as" />
            <exclude name="**/formatters/*.as" />
            <exclude name="**/comparators/*.as" />
            <exclude name="**/reflection/*.as" />
        </fileset>
        <pathconvert property="includes" pathsep=" -in " refid="sources">
        </pathconvert>
        <echo message="includes is set to = ${includes}" level="verbose" />
        <!-- <echo message="includes is set to = ${includes}" /> -->
        
<!--

Usage:
  asc {-AS3|-ES|-d|-f|-h|-i|-import <filename>|-in <filename>|-m|-p}* filespec
  -AS3 = use the AS3 class based object model for greater performance and better error reporting
  -ES = use the ECMAScript edition 3 prototype based object model to allow dynamic overriding of prototype properties
  -d = emit debug info into the bytecode
  -f = print the flow graph to standard out
  -h = print this message
  -i = write intermediate code to the .il file
  -import <filename> = make the packages in the
       specified file available for import
  -in <filename> = include the specified filename
       (multiple -in arguments allowed)
  -m = write the avm+ assembly code to the .il file
  -p = write parse tree to the .p file
  -md = emit metadata information into the bytecode
  -warnings = warn on common actionscript mistakes
  -strict = treat undeclared variable and method access as errors
  -sanity = system-independent error/warning output - appropriate for sanity testing
  -log = redirect all error output to a logfile
  -exe <avmplus path> = emit an EXE file (projector)
  -swf classname,width,height[,fps] = emit a SWF file
  -language = set the language for output strings {EN|FR|DE|IT|ES|JP|KR|CN|TW}
  -optimize = produced an optimized abc file
  -config ns::name=value = define a configuration value in the namespace ns
  -use <namespace> = automatically use a namespace when compiling this code
  -avmtarget <vm version number> = emit bytecode for a specific VM version, 1 is AVM1, 2 is AVM2, etc

 -->
        
        <exec executable="java">
            <arg line="-jar ${redshell}/asc.jar" />
            <arg line="-AS3 -strict" />
            <arg line="-import ${redshell}/builtin.abc" />
            <arg line="-import ${redshell}/toplevel.abc" />
            <arg line="-in ${includes}" />
            <arg line="${x4a.src}/framework_redtamarin.as" />
        </exec>
        
        <echo message="-----------" />
        <exec executable="./${redshell}/redshell">
            <arg line="${x4a.src}/framework_redtamarin.abc" />
        </exec>
        
    </target>
    
</project>
